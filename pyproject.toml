[tool.poetry]
name = "github-topic-generator"
version = "0.1.2"
description = "GitHub repository topic generator using AI"
authors = ["Namgyu-Youn <yynk2012@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
gradio = "^5.9.1"
torch = {version = "^2.5.1", source = "pytorch"}
transformers = "^4.47.1"
aiohttp = "^3.11.11"
python-dotenv = "^1.0.1"
ruff = "^0.8.5"
tiktoken = "^0.5.2"
protobuf = "^4.25.3"
sentencepiece = "*"
tokenizers = ">=0.21,<0.22"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
(
    logs/|
    .pytest_cache/|
    __pycache__
)
'''

[tool.ruff]
line-length = 150
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "RUF",  # Ruff-specific rules
    "I",    # isort
    "D",    # pydocstyle
    "C4",   # flake8-comprehensions
]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D107",  # Missing docstring in __init__
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "D400",  # First line should end with a period
    "D415",  # First line should end with period, question mark, or exclamation point
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "PLR2004"]
"scripts/*" = ["T20"]
